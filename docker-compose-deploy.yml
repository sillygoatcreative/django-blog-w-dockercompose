version: '3.3'

networks:
    web:
        external: true
    internal:
        external: false

services:
  app:
    build:
      context: .
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - DB_HOST=DB
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    labels:
      - traefik.enable=false
    networks:
        - internal
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    labels:
      - traefik.enable=false
    networks:
      - internal


  proxy:
    build:
      context: ./proxy
    restart: always
    labels: 
      - traefik.http.routers.blogd.rule=Host(`blogd.rwrm.net`)
      - traefik.http.routers.blogd.tls=true
      - traefik.http.routers.blogd.tls.certresolver=lets-encrypt
      - traefik.port=8001
    networks:
      - internal
      - web

    depends_on:
      - app
    ports:
      - 8001:8000
    volumes:
      - static-data:/vol/static

volumes:
  postgres-data:
  static-data:

